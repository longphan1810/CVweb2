/**
  See Github repo for the unminified/untranspiled code!
*/

'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,'value'in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}();function _possibleConstructorReturn(self,call){if(!self)throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called');return call&&('object'==typeof call||'function'==typeof call)?call:self}function _inherits(subClass,superClass){if('function'!=typeof superClass&&null!==superClass)throw new TypeError('Super expression must either be null or a function, not '+typeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}}),superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass)}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError('Cannot call a class as a function')}window.onload=function(){var a=interpolateRGB([100,100,100],[255,255,255]),b=new CanvasSpace('mount').setup({bgcolor:'#111'}),d=new Form(b);var e=function e(q,s){_classCallCheck(this,e),this.x=q,this.y=s};var f=function(_e){function f(q){_classCallCheck(this,f);var _this=_possibleConstructorReturn(this,(f.__proto__||Object.getPrototypeOf(f)).call(this,q.x,q.y));return _this.p1={x:0,y:0},_this.angle=0,_this.radius=q.radius,_this.speed=q.speed,_this.stagger=q.stagger,_this.p1={x:0,y:0},_this}return _inherits(f,_e),_createClass(f,[{key:'stroke',value:function stroke(){var q=Math.cos(this.angle),s=-Math.sin(this.angle);return this.p1={x:this.x+q*this.radius,y:this.y+s*this.radius},this.p1}},{key:'update',value:function update(q){this.angle=2*(this.speed*(q+this.stagger)/1e3%1*Math.PI),this.stroke()}},{key:'render',value:function render(q,s){this.update(s)}}]),f}(e);var g=function(_e2){function g(q){_classCallCheck(this,g);var _this2=_possibleConstructorReturn(this,(g.__proto__||Object.getPrototypeOf(g)).call(this,0,0));if(_this2.crank=q.crank,_this2.angle=q.angle,_this2.size=q.size,_this2.p1={x:0,y:0},_this2.h=0,_this2.hMin=1/0,_this2.hMax=-(1/0),_this2.size<_this2.crank.radius)throw new Error('Connecting rod needs to be equal or larger than crank radius');return _this2}return _inherits(g,_e2),_createClass(g,[{key:'littleEnd',value:function littleEnd(){var q=this.crank.radius*Math.cos(this.angle-this.crank.angle),s=Math.pow(this.size,2),t=Math.pow(this.crank.radius,2),u=Math.pow(Math.sin(this.crank.angle),2),v=q+Math.sqrt(s-t*u);this.hMin=Math.min(v,this.hMin),this.hMax=Math.max(v,this.hMax);var w=0;this.hMin!==this.hMax&&(w=Util.mapToRange(this.h,this.hMin,this.hMax,0,1));var z=Math.cos(this.angle)*v+20*Math.sin(w*Math.PI),A=-Math.sin(this.angle)*v+60*Math.sin(w*Math.PI);return this.h=v,this.p1={x:this.crank.x+z,y:this.crank.y+A},this.p1}},{key:'bigEnd',value:function bigEnd(){this.x=this.crank.p1.x,this.y=this.crank.p1.y}},{key:'update',value:function update(){this.bigEnd(),this.littleEnd()}},{key:'render',value:function render(){this.update(),d.line(new Line(this).to(this.p1))}}]),g}(e);var k=function(_g){function k(q){_classCallCheck(this,k);var _this3=_possibleConstructorReturn(this,(k.__proto__||Object.getPrototypeOf(k)).call(this,q));return _this3.radius=q.radius*Math.random(),_this3.radius=q.radius*Math.random(),_this3}return _inherits(k,_g),_createClass(k,[{key:'render',value:function render(q){if(this.update(),this.hMin!==this.hMax){var s=Util.mapToRange(this.h,this.hMin,this.hMax,0,1),t='rgb('+a(s).map(function(u){return Math.floor(u)}).join(',');q.stroke(t,1),q.stroke(!1),q.fill(t),q.circle(new Circle(this.p1).setRadius(Math.max(s,0.5)*this.radius))}}}]),k}(g);var l=[],m=[];for(var n=1;7>=n;n++){l.push(new f({x:b.center.x,y:b.center.y,radius:10*n,speed:0.2,stagger:100*n}));for(var o=1;o<=30+3*n;o++)m.push(new k({size:30*Math.pow(n,0.9),angle:2*(o/(30+3*n)*Math.PI),crank:l[n-1],radius:2.5}))}// Quick run through the experiement and find min/max displacement
var _loop=function _loop(_p2){_p2++,l.forEach(function(q){return q.update(_p2)}),m.forEach(function(q){return q.update(_p2)}),_p=_p2};for(var _p=0;5e3>_p;)_loop(_p);b.add({animate:function animate(q){l.forEach(function(s){return s.update(q)}),m.forEach(function(s){return s.render(d,q)})}}),b.play()};
